schedules:
- cron: "0 12 * * *"
  displayName: 'Daily Build'
  always: true
  branches:
    include:
    - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  AZURE_CLIENT_ID: $(CLIENT_ID)
  AZURE_CLIENT_SECRET: $(CLIENT_SECRET)
  AZURE_TENANT_ID: $(TENANT_ID)
  AZURE_SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
  AZURE_ENV_NAME: $(ENV_NAME)
  AZURE_LOCATION: $(LOCATION)
  AZURE_LOCATION2: $(LOCATION2)  
  AZURE_DATABASE_PASSWORD: $(DATABASE_PASSWORD)
  AZURE_PRINCIPAL_TYPE: 'ServicePrincipal'

stages:
- stage: build
  jobs:
  - job: build
    container: mcr.microsoft.com/azure-dev-cli-apps:latest
    steps:
    - checkout: self
    - task: UseDotNet@2
      inputs:
        version: '7.0.x'
        performMultiLevelLookup: true
    - script: |
        azd auth login \
          --client-id "$(AZURE_CLIENT_ID)" \
          --client-secret "$(AZURE_CLIENT_SECRET)" \
          --tenant-id "$(AZURE_TENANT_ID)"
      displayName: 'Log in to Azure with AZD'
      condition: ne(variables['AZURE_CLIENT_ID'], '')

    - script: azd provision --no-prompt
      displayName: 'Azure Dev Provision'
      
    - script: |
        azd auth login \
          --client-id "$(AZURE_CLIENT_ID)" \
          --client-secret "$(AZURE_CLIENT_SECRET)" \
          --tenant-id "$(AZURE_TENANT_ID)"
      displayName: 'AZD Login again because auth token may have expired after provision'

    - script: azd env set AZURE_RESOURCE_GROUP $(AZURE_ENV_NAME)-rg
      displayName: 'Set AZD resource group'
    
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AzureServiceConnection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'azd deploy --no-prompt'

    - script: ./infra/devOpsScripts/validateDeployment.sh -g $(AZURE_ENV_NAME)-rg
      displayName: 'QA - Validate Deployment'

- stage: teardown
  condition: eq(variables['run_tear_down'], 'true')
  dependsOn: build
  jobs:
  - job: teardown
    container: mcr.microsoft.com/azure-dev-cli-apps:latest
    steps:
    - checkout: self
    - script: |
        azd login \
          --client-id "$(AZURE_CLIENT_ID)" \
          --client-secret "$(AZURE_CLIENT_SECRET)" \
          --tenant-id "$(AZURE_TENANT_ID)"
      displayName: 'Log in to Azure with AZD'

    - script: azd down --force --purge --no-prompt
      displayName: 'Azure Dev Down'