name: "MWA- Daily Build"
on:
  workflow_dispatch:
    inputs:
      run_tear_down:
        description: 'When true, resources will be deleted after a run'
        required: false
        default: true
        type: boolean
  pull_request:
    types: [opened, synchronize, ready_for_review, reopened]
  schedule:
    - cron: '0 12 * * *'
      inputs:
        run_tear_down:
          default: true

# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read

concurrency: integration_testing
    
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/azure-dev-cli-apps:latest
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}
      IS_RUN_AS_SERVICEPRINCIPAL: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in with Azure (Federated Credentials)
        if: ${{ env.AZURE_CLIENT_ID != '' }}
        run: |
          azd auth login `
            --client-id "$Env:AZURE_CLIENT_ID" `
            --federated-credential-provider "github" `
            --tenant-id "$Env:AZURE_TENANT_ID" `
        shell: pwsh

      - name: Azure Dev Provision
        run: azd provision --no-prompt
        env:
          AZURE_LOCATION: ${{ secrets.AZURE_LOCATION }}

      - name: Log in with Azure (Federated Credentials)
        if: ${{ env.AZURE_CLIENT_ID != '' }}
        run: |
          azd auth login `
            --client-id "$Env:AZURE_CLIENT_ID" `
            --federated-credential-provider "github" `
            --tenant-id "$Env:AZURE_TENANT_ID" `
        shell: pwsh

      - name: Set AZD resource group
        # temporary work around for known issue with multiple resource groups
        # https://github.com/Azure/azure-dev/issues/690
        run: azd env set AZURE_RESOURCE_GROUP ${{ secrets.AZURE_ENV_NAME }}-rg

      - name: Azure Dev Deploy
        run: |
          chmod +x ./infra/devOpsScripts/configureLoadTest.sh
          azd deploy --no-prompt
        env:
          AZURE_LOCATION: ${{ secrets.AZURE_LOCATION }}

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: QA - Validate Deployment
        run: |
          chmod +x ./infra/devOpsScripts/validateDeployment.sh
          ./infra/devOpsScripts/validateDeployment.sh -g ${{ secrets.AZURE_ENV_NAME }}-rg


  teardown:
    if: ${{ inputs.run_tear_down }}
    needs: [build]
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/azure-dev-cli-apps:latest
    env:
        AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}daily2
        AZURE_LOCATION: ${{ secrets.AZURE_LOCATION2 }}
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        IS_RUN_AS_SERVICEPRINCIPAL: true

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Log in with azd (Federated Credentials)
        run: |
          azd login  --client-id ${{ secrets.AZURE_CLIENT_ID }}  --federated-credential-provider "github"  --tenant-id ${{ secrets.AZURE_TENANT_ID }}

      - name: Azure Dev Down
        run: azd down --force --purge --no-prompt
        env:
          AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}daily2
          AZURE_LOCATION: ${{ secrets.AZURE_LOCATION2 }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}


